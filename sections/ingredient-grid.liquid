{% schema %}
   {
     "name": "Ingredient Grid Modal",
     "settings": [
       {
  "type": "checkbox",
  "id": "show_divider",
  "label": "Show Divider",
  "default": false
},
{
  "type": "checkbox",
  "id": "remove_vertical_spacing",
  "label": "Remove Vertical Spacing",
  "default": false
},
{
      "type": "select",
      "id": "section_width",
      "label": "Section Width",
      "options": [
        { "value": "large", "label": "Large" },
        { "value": "xl", "label": "Extra Large" },
        { "value": "fullwidth", "label": "Full Width" }
      ],
      "default": "large"
    },

    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Ingredients"
    },
    {
      "type": "text",
      "id": "section_subhead",
      "label": "Section Subhead",
      "default": "Our Ingredients are the best"
    }
  ],
     "blocks": [
       {
         "type": "ingredient_card",
         "name": "Ingredient Card",
         "settings": [
           {
             "type": "text",
             "id": "title",
             "label": "Title"
           },
           {
      "type": "color",
      "id": "title_font_color",
      "label": "Title Font Color",
      "default": "#2d2a26"
    },
           {
             "type": "text",
             "id": "subtitle",
             "label": "Subtitle"
           },
           {
      "type": "color",
      "id": "subtitle_font_color",
      "label": "Subtitle Font Color",
      "default": "#2d2a26"
    },
           {
             "type": "image_picker",
             "id": "image",
             "label": "Image"
           },
           {
             "type": "text",
             "id": "ingredient_type",
             "label": "Type"
           },
           {
           "type": "checkbox",
            "id": "is_active",
            "label": "Mark as Active",
            "default": false
           },
           {
          "type": "color",
          "id": "tag_font_color",
          "label": "Tag Font Color",
          "default": "#2d2a26"
        },
        {
          "type": "color",
          "id": "active_tag_font_color",
          "label": "Active Tag Font Color",
          "default": "#246f16"
        },
           {
             "type": "richtext",
             "id": "more_info",
             "label": "More Info"
           },
        {
          "type": "color",
          "id": "more_info_button_color",
          "label": "More Info Button Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "Background Color",
          "default": "#d6d1c4"
        },
        {
        "type": "text",
        "id": "how_much",
        "label": "How Much"
        },
        {
        "type": "text",
        "id": "why_included",
        "label": "Why Included"
        },
        {
        "type": "text",
        "id": "what_it_does",
        "label": "What It Does"
        }
         ]
       }
     ]
   }
{% endschema %}

{% stylesheet %}
    .no-vertical-spacing {
        margin-top: 0;
        margin-bottom: 0;
    }

    .no-horizontal-spacing {
        margin-left: 0;
        margin-right: 0;
    }

    .ingredient-section-divider {
        border-top: 1px solid #ccc;
        margin-top: 1em;
        margin-bottom: 1em;
    }

      .ingredient-section-title {
        text-align: center;
        text-transform: uppercase;
    }

      .ingredient-section-subhead {
        text-align: center;
        text-transform: uppercase;
    }

      .ingredient-grid {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: start;
        padding: 2em;
      }

      .ingredient-card {
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        border: 1px solid #ccc;
        padding: 1em;
        min-height: 200px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        margin: 1em;
        position: relative;
      }

      .ingredient-card-content {
        position: relative;
        min-height: 60px;
        z-index: 1;
        margin-right: 25%; /* This keeps the text from going under the image */
      }

      .ingredient-card.section-spacing {
        margin-block-start: 30px; /* example value */
      }

      /* CSS for 3 across */
      @media screen and (min-width: 1200px) {
        .ingredient-card {
          max-width: 350px;
          width: calc((100vw - 6em) / 3);
        }
      }

      /* CSS for 2 across */
      @media screen and (min-width: 769px) and (max-width: 1199px) {
        .ingredient-card {
          max-width: 350px;
          width: calc((100vw - 4em) / 2);
        }
      }

      /* CSS for 1 across */
      @media screen and (max-width: 768px) {
        .ingredient-card {
          max-width: 75vw; /* Set the max-width to be 75% of the viewport width */
          width: calc(100vw - 4em);
        }
      }

      /* CSS for small mobiles */
      @media screen and (max-width: 480px) {
        /* For small mobile devices */
        .ingredient-card {
          min-height: 150px;
          width: calc(100vw - 4em);
        }
      }

      .ingredient-card::before {
        content: ""; /* This is necessary for the pseudo-element to work */
        position: absolute;
        top: 0;
        left: 35%;
        width: 65%;
        height: 100%;
        background: radial-gradient(circle, rgba(54, 54, 54, 0.05), transparent);
        z-index: 1;
      }

      .ingredient-card img {
        position: absolute;
        top: 0px;
        right: 0px;
        width: 40%;
        height: auto;
        z-index: 2;
        filter: drop-shadow(-3px 5px 5px rgba(0, 0, 0, 0.5));
        margin-block-start: 0 !important;
      }

      .ingredient-card h3 {
        margin: 0;
        font-size: 1.25em;
        margin-bottom: 0.1em;
        text-transform: uppercase;
        line-height: 1.3;
      }

      .ingredient-card h5 {
        margin: 0;
        font-size: 0.8em;
        font-weight: normal;
        margin-block-start: 0 !important;
        text-transform: uppercase;
      }

      .ingredient-card h3, .ingredient-card h5 {
        word-wrap: break-word;
    }

      .ingredient-card .info-button {
        position: absolute;
        bottom: 1em;
        right: 1em;
        font-weight: bold;
        color: #fff;
        border: 2px solid #fff;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
      }

      .ingredient-tag {
        background: none;
        border: none;
        font-weight: bold;
        padding: 0.2em 0.5em;
        font-size: 0.8em;
        position: absolute;
        bottom: 1em;
        left: 1em;
        text-transform: uppercase;
        z-index: 1;
      }

      .ingredient-tag.active {
        color: #246f16;
      }

    /* Add styles to modal */
    .modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 80%; /* Updated the width */
      max-width: 600px; /* You can adjust the max-width */
      overflow: hidden;
      z-index: 4;
    }

    .modal-content {
      display: flex;
      flex-direction: column;
      align-items: stretch;
      border: 1px solid #ccc;
      padding: 1em;
      box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
      margin: 1em;
      position: relative;
    }

      @media screen and (min-width: 1200px) {
        .modal-content {
          min-height: 300px;
        }
      }

      @media screen and (min-width: 769px) and (max-width: 1199px) {
        .modal-content {
          min-height: 300px;
        }
      }

      @media screen and (max-width: 768px) {
        .modal-content {
          min-height: 300px;
        }
      }

      /* CSS for small mobiles */
      @media screen and (max-width: 480px) {
        /* For small mobile devices */
        .modal-content {
          min-height: 325px;
        }
      }

    .modal-divider {
        border: none;
        border-top: 1px solid #fff;
        margin-top: 5px;
        margin-bottom: 20px;
        display: block;
    }

    .modal-content h3 {
        font-size: 1.25em;
        margin-bottom: 0.1em;
        text-transform: uppercase;
      }

    .modal-content p {
        font-size: 0.8em;
      }

    .how-much {
      font-size: 0.8em;
      margin-block-start: 0;
      margin-block-end: 0;
      text-transform: uppercase;
      }

    .what-it-does {
      margin-top: 20px;
      text-transform: uppercase;
    }

    .modal-bottom-container {
        position: absolute;
        bottom: 1em;
        left: 1em;
        margin-right: 1em
      }

    .modal-bottom-container .ingredient-tag {
        position: relative;
        margin-top:10px;
        bottom: 0;
        left: 0;
        padding: 0;
      }

    .close {
      position: absolute;
      top: 0;
      right: 0.5em;
      font-weight: normal;
      font-size: 24px;
      cursor: pointer;
      z-index: 5;
    }

    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
      opacity: .25;
        z-index: 3;
      }

    .prev, .next {
        cursor: pointer;
        position: absolute;
        top: 50%;
        width: auto;
        color: var(--main-black);
        font-weight: bold;
        font-size: 18px;
        transition: 0.6s ease;
        z-index: 5;
        display: inline-block;
        padding: 0;

    }

    .prev {
        left: 0;
    }

    .next {
        right: 0;
    }

    .prev:hover, .next:hover {
        background-color: rgba(0, 0)

    /*Default Global Colors*/


.button-container {
  display: flex !important;
  flex-direction: column !important; /* Align children vertically */
  justify-content: center  !important;
  align-items: center !important;
  text-align: center !important;
  padding: 12px;
  background-color: #FFFFFF;
  width: 10%  !important;
}
.ingredient-cta {
  margin: 10px auto; /* Add margin for spacing */
  display: block;
}
{% endstylesheet %}

{% javascript %}
  
  
  
  
document.addEventListener('DOMContentLoaded', function() {
    
    const modals = document.querySelectorAll('.modal');
    const overlay = document.getElementById('modal-overlay');
    const infoButtons = document.querySelectorAll('.info-button');
    const closeButtons = document.querySelectorAll('.close');

    function openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = "block";
            overlay.style.display = "block";
            document.body.style.overflow = "hidden";
        }
    }
    
    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = "none";
            overlay.style.display = "none";
            document.body.style.overflow = "auto";
        }
    }

// Bind click event to info buttons
    infoButtons.forEach((button, index) => {
        button.addEventListener('click', () => openModal(`${index + 1}-modal`));
    });

    // Bind click event to close buttons
    closeButtons.forEach((button, index) => {
        button.addEventListener('click', () => closeModal(`${index + 1}-modal`));
    });

    // Bind click event to overlay
    if (overlay) {
        overlay.addEventListener('click', () => {
            modals.forEach((modal, index) => {
                closeModal(`${index + 1}-modal`);
            });
        });
    }

    const prevButtons = document.querySelectorAll('.prev');
    const nextButtons = document.querySelectorAll('.next');

    prevButtons.forEach((button, index) => {
        button.addEventListener('click', (event) => {
            event.stopPropagation(); // Prevents the modal from closing
            plusSlides(-1); // Go to the previous slide
        });
    });

    nextButtons.forEach((button, index) => {
        button.addEventListener('click', (event) => {
            event.stopPropagation(); // Prevents the modal from closing
            plusSlides(1); // Go to the next slide
        });
    });

    let slideIndex = 1;

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function showSlides(n) {
        const slides = document.querySelectorAll(".modal");
        const totalSlides = slides.length;

        for (let i = 0; i < totalSlides; i++) {
            closeModal(`${i + 1}-modal`);
        }

        if (n > totalSlides) {
            slideIndex = 1;
        } else if (n < 1) {
            slideIndex = totalSlides;
        }

        openModal(`${slideIndex}-modal`);
    }
});
{% endjavascript %}

{% assign cards = section.blocks %}

{% case section.settings.section_width %}
  {% when 'large' %}
    {% assign container_class = 'container container--lg' %}
  {% when 'xl' %}
    {% assign container_class = 'container container--xl' %}
  {% when 'fullwidth' %}
    {% assign container_class = 'container' %}
{% endcase %}

{% assign spacingClass = 'section-spacing' %}

{% if section.settings.remove_vertical_spacing %}
  {% assign spacingClass = 'section-spacing section-spacing--tight' %}
{% endif %}

<div id="modal-overlay" class="modal-overlay" onclick="closeModal('{{ forloop.index }}-modal')"></div>

<div class="{{ container_class }}{% if section.settings.show_divider %} bordered-section{% endif %}{% unless section.settings.remove_vertical_spacing %} section-spacing{% endunless %}">
  <div class="ingredient-section">
    <!-- Section Title and Subhead -->
    <h4 class="ingredient-section-subhead">{{ section.settings.section_subhead }}</h4>
    <h2 class="ingredient-section-title">{{ section.settings.section_title }}</h2>
    <div class="ingredient-grid">
      {% for card in section.blocks %}
        <!-- Ingredient Card -->
        <div class="ingredient-card" style="background-color: {{ card.settings.background_color }};">
          <div class="ingredient-card-content">
            <h3 style="color: {{ card.settings.title_font_color }};">{{ card.settings.title }}</h3>
            <h5 style="color: {{ card.settings.subtitle_font_color }};">{{ card.settings.subtitle }}</h5>
          </div>
          {% if card.settings.image != blank %}
            <img src="{{ card.settings.image | img_url: '300x' }}" alt="{{ card.settings.title }}">
          {% endif %}
          {% if card.settings.is_active %}
            <p class="ingredient-tag active" style="color: {{ card.settings.active_tag_font_color }};">
              {{ card.settings.ingredient_type }}
            </p>
          {% else %}
            <p class="ingredient-tag" style="color: {{ card.settings.tag_font_color }};">
              {{ card.settings.ingredient_type }}
            </p>
          {% endif %}
          <button
            class="info-button"
            onclick="openModal('{{ forloop.index }}-modal')"
            style="color: {{ card.settings.more_info_button_color }}; border-color: {{ card.settings.more_info_button_color }};"
          >
            +
          </button>
        </div>
        <!-- The Modal -->
        <div id="{{ forloop.index }}-modal" class="modal">
          <div class="modal-content" style="background-color: {{ card.settings.background_color }};">
            <span class="close" onclick="closeModal('{{ forloop.index }}-modal')">&times;</span>
            <h3>{{ card.settings.title }}</h3>
            <p class="how-much">{{ card.settings.how_much }}</p>
            <hr class="modal-divider">
            <p>{{ card.settings.why_included }}</p>
            <div class="modal-bottom-container">
              <h5 class="what-it-does">What It Does</h5>
              <p>{{ card.settings.what_it_does }}</p>
              {% if card.settings.is_active %}
                <div class="ingredient-tag active" style="color: {{ card.settings.active_tag_font_color }};">
                  {{ card.settings.ingredient_type }}
                </div>
              {% else %}
                <div class="ingredient-tag" style="color: {{ card.settings.tag_font_color }};">
                  {{ card.settings.ingredient_type }}
                </div>
              {% endif %}
            </div>
          </div>
          <span class="prev" onclick="plusSlides(-1)">&#10094;</span>
          <span class="next" onclick="plusSlides(1)">&#10095;</span>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
<script>
  //replace the shopify validation token here
  const validationToken =
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGUyZmU1NGYzOGFiNjAwMjEzODQyMzgiLCJzdG9yZVVybCI6Imh0dHBzOi8vbXlzdW5kYXkyc3VuZGF5LmNvbS9wcm9kdWN0cy8iLCJpYXQiOjE2ODk5NDc0ODR9.Ni-FuhscmzUQtRNJbvhN8pncEqmQL4_OUQheh_zWKxI';
  //replace the Client name here
  const clientName = 'sundayiisunday';
  //Add Custom Product Attribute Heading Text
  const productAttributesHeadingText = 'Attributes';
  //Add Definition Heading Text
  const definitionHeadingText = 'Definition:';
  //Add Custom Notes Heading Text
  const customNoteHeadingText = 'NOTE FROM BRAND';
  //Add Custom Functions Heading Text
  const functionsHeadingText = 'Purpose:';
  //Add Custom Product Ingredient Attribute Heading Text
  const productIngredientAttributesHeadingText = 'Qualities:';
  //Add Custom Additional Details Heading Text
  const additionalDetailsHeadingText = 'Additional Notes';
</script>

<link rel="stylesheet" href="{{ 'cfm-stylesheet.css' | asset_url }}">

<script src="{{ 'cfm-logic.js' | asset_url }}" defer></script>
<!-- CFM Structure -->
{% assign current_variant = product.selected_or_first_available_variant %}
<span id="cfm-sku" class="cfm-sku">{{ current_variant.sku }}</span>

<div
  id="ingredient-structure-container"
  class="ingredient-structure-container"
>
  <div class="button-container button" onclick="handleButtonClick()">
    <svg
      viewBox="0 0 256.000000 256.000000"
      preserveAspectRatio="xMidYMid meet"
      class="ing-icon icon-fill"
    >
      <g
        transform="translate(0.000000,256.000000) scale(0.100000,-0.100000)"
        stroke="none"
      >
        <path
          d="M1655 2531 c-34 -15 -57 -49 -62 -93 -4 -35 0 -50 21 -81 l26 -38
            -204 -415 -204 -414 -591 0 -590 0 -12 -22 c-21 -39 -24 -224 -4 -319 38 -190
            120 -337 269 -484 102 -101 195 -168 339 -245 53 -28 97 -54 97 -57 0 -3 -14
            -21 -31 -41 -40 -45 -68 -108 -79 -175 -14 -93 -44 -87 405 -87 261 0 403 -4
            422 -11 15 -6 108 -16 206 -22 264 -16 353 9 478 133 90 89 143 196 168 342
            11 58 28 126 39 151 27 61 86 124 144 153 50 25 61 50 33 74 -16 13 -196 30
            -229 22 -14 -4 -18 -1 -13 9 48 116 61 154 74 213 15 75 19 227 7 292 -14 79
            8 73 -303 76 l-279 3 99 265 c55 146 111 295 125 331 24 65 26 67 67 72 59 8
            97 51 97 112 0 71 -26 91 -248 184 -188 79 -225 89 -267 72z m236 -142 c96
            -40 182 -79 192 -88 19 -19 15 -46 -9 -55 -18 -7 -385 145 -397 166 -14 21 -2
            48 21 48 11 0 97 -32 193 -71z m-46 -145 c63 -25 115 -49 115 -53 0 -3 -58
            -161 -129 -351 l-128 -345 -191 -3 c-106 -1 -192 -1 -192 1 0 15 393 797 401
            797 5 0 61 -21 124 -46z m451 -871 c16 -109 -12 -266 -72 -395 l-36 -76 -47
            -7 c-231 -32 -396 -137 -481 -308 -22 -43 -40 -86 -40 -93 0 -18 -24 -18 -39
            0 -14 16 -117 61 -177 76 -60 15 -117 61 -143 114 -41 87 -73 71 -96 -48 -8
            -43 -15 -109 -15 -147 l0 -69 -169 0 -168 0 -104 53 c-140 71 -246 144 -342
            236 -182 174 -269 362 -270 587 0 55 3 106 7 112 5 9 276 12 1096 12 l1089 0
            7 -47z m47 -585 c-49 -52 -83 -132 -108 -252 -27 -131 -46 -182 -93 -254 -77
            -119 -218 -189 -360 -180 l-53 3 146 180 c112 139 145 186 143 205 -2 18 -10
            26 -28 28 -23 3 -44 -20 -165 -172 -77 -97 -143 -176 -147 -176 -12 0 -9 193
            3 252 44 205 195 341 430 387 24 5 93 9 153 10 l110 1 -31 -32z m-940 -299
            c80 -23 141 -55 173 -91 19 -21 21 -31 15 -101 l-6 -78 -75 76 c-41 41 -80 75
            -87 75 -6 0 -19 -7 -27 -16 -23 -23 -8 -45 95 -142 49 -46 89 -88 89 -94 0
            -15 -90 -2 -151 21 -76 29 -124 74 -161 149 -30 61 -33 76 -37 180 l-3 114 52
            -36 c28 -20 84 -45 123 -57z m-229 -184 c4 -19 27 -64 51 -100 l45 -65 -280 0
            c-217 0 -280 3 -280 13 1 29 44 105 83 145 l41 42 167 0 167 0 6 -35z"
        />
        <path
          d="M340 1285 c-17 -20 -6 -137 21 -235 34 -125 109 -245 146 -238 26 5
            40 35 26 56 -66 92 -105 190 -118 295 l-7 57 227 2 c204 3 229 5 239 21 8 12
            8 22 0 35 -10 15 -36 17 -266 20 -219 2 -257 0 -268 -13z"
        />
      </g>
    </svg>
    <button class="ingredient-cta">SEE ALL INGREDIENTS</button>
    <svg
      viewBox="0 0 52.000000 52.000000"
      preserveAspectRatio="xMidYMid meet"
      class="icon-fill"
    >
      <g
        transform="translate(0.000000,52.000000) scale(0.100000,-0.100000)"
        stroke="none"
      >
        <path
          d="M0 260 l0 -250 250 0 250 0 0 250 0 250 -250 0 -250 0 0 -250z m480
              0 l0 -230 -230 0 -230 0 0 230 0 230 230 0 230 0 0 -230z"
        />
        <path
          d="M240 340 l0 -60 -66 0 c-48 0 -65 -3 -62 -12 3 -8 28 -14 66 -16 l62
              -3 0 -59 c0 -47 3 -60 15 -60 12 0 15 13 15 60 l0 60 60 0 c47 0 60 3 60 15 0
              12 -13 15 -60 15 l-60 0 0 60 c0 47 -3 60 -15 60 -12 0 -15 -13 -15 -60z"
        />
      </g>
    </svg>
  </div>
</div>
<!-- CFM Code Snippet ends here --><!-- CFM styles and scripts -->

